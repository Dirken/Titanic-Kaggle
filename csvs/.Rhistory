kmeans <- cclust (dataC, K, iter.max=100, method="kmeans", dist="euclidean")
(CH <- clustIndex(kmeans,dataC, index="calinski"))
data <- cbind(kmeans$cluster,dataC)
data <- as.data.frame(data)
names(data)[1]<-paste("Target")
data$Target <- factor(data$Target)
(lda.model <- lda (Target ~ ., data, prior = seq(1,1,length.out=K)/K))
plot(lda.model, col = as.numeric((data$Target)))
data.lda.cv <- lda(Target ~ ., data, prior = seq(1,1,length.out=K)/K, CV=TRUE)
summary(data.lda.cv$class)
tab <- table(data$Target, data.lda.cv$class)
(error.LOOCV <- 100*(1-sum(tab[row(tab)==col(tab)])/sum(tab)))
data.lda <- lda(Target ~ ., data, prior = seq(1,1,length.out=K)/K)
pred <- predict(data.lda, data)$class
t_true <- data[,1]
table(pred,t_true)
(sum(pred != t_true)/length(t_true))*100
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- predict(model,newdata=subset(test),type='response')
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- predict(model,newdata=subset(test,select=c(1,2,3,4,5,6,7)),type='response')
fitted.results <- predict(model,newdata=subset(test,select=c(1,2,3,4,5,6,7,8)),type='response')
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
test <- read.csv("originals/test.csv", stringsAsFactors = FALSE)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
test <- read.csv("originals/test.csv")
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
test
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- predict(model,newdata=subset(test),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- predict(model,test)
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
training.data.raw <- read.csv("originals/train.csv",header=T,na.strings=c(""))
sapply(training.data.raw,function(x) sum(is.na(x)))
sapply(training.data.raw, function(x) length(unique(x)))
library(Amelia)
data <- subset(training.data.raw,select=c(2,3,5,6,7,8,10,12))
data$Age[is.na(data$Age)] <- mean(data$Age,na.rm=T)
is.factor(data$Sex)         # Returns TRUE
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
training.data.raw <- read.csv("originals/train.csv",header=T,na.strings=c(""))
data <- subset(training.data.raw,select=c(2,3,5,6,7,8,10,12))
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
misClasificError
data <- subset(training.data.raw,select=c(2,3,5,6,7,8,10,12))
training.data.raw <- read.csv("originals/train.csv",header=T,na.strings=c(""))
data <- subset(training.data.raw,select=c(2,3,5,6,7,8,10,12))
data$Age[is.na(data$Age)] <- mean(data$Age,na.rm=T)
is.factor(data$Sex)         # Returns TRUE
is.factor(data$Embarked)    # Returns TRUE
contrasts(data$Sex)
contrasts(data$Embarked)
data <- data[!is.na(data$Embarked),]
rownames(data) <- NULL
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
is.factor(data$Sex)         # Returns TRUE
contrasts(data$Sex)
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
train
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = FALSE)
test
data <- subset(training.data.raw,select=c(1,2,4,6,7,8))
data <- subset(train,select=c(1,2,4,6,7,8))
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = FALSE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = FALSE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- predict(model,newdata=subset(test,select=c(1,2,4,6,7,8)),type='response')
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(1,2,4,6,7,8)),type='response')
test <- as.data.frame(test)
fitted.results <- predict(model,newdata=subset(test,select=c(1,2,4,6,7,8)),type='response')
fitted.results <- predict(model,newdata=test,type='response')
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = FALSE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = FALSE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test <- as.data.frame(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = FALSE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = FALSE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
is.factor(data$Sex)         # Returns TRUE
is.factor(data$Embarked)    # Returns TRUE
data$Sex <- as.factor(data$Sex)
data$Sex <- as.factor(data$Sex)
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
data$Sex <- as.factor(data$Sex)
is.factor(data$Sex)         # Returns TRUE
is.factor(data$Embarked)    # Returns TRUE
contrasts(data$Sex)
contrasts(data$Embarked)
test <- as.data.frame(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test <- as.data.frame(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
train <- subset(train,select=c(1,2,4,7,8))
test <-  subset(test,select=c(1,2,4,7,8))
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,7,8))
test <-  subset(test,select=c(1,2,4,7,8))
test <- as.data.frame(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,6,7,8))
test <-  subset(test,select=c(1,2,6,7,8))
test <- as.data.frame(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test <- as.data.frame(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test$Sex <- as.numeric(test$Sex)
test <- as.data.frame(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test$Sex <- as.numeric(test$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
train$Sex <- as.numeric(train$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
train$Sex <- as.numeric(test$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
test$Sex <- as.numeric(train$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test$Sex <- as.numeric(train$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
test$Sex <- as.numeric(test$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
misClasificError
test$Sex <-  as.numeric(levels(train$Sex))[train$Sex]
test$Sex <-  as.numeric(levels(train$Sex))[train]
test$Sex <-  as.numeric(levels(train))[train$Sex]
test$Sex <-  as.numeric(levels(train$Sex))
test$Sex <-  as.character.factor(train$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test$Sex <-  as.factor(train$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,6,7,8))
test <-  subset(test,select=c(1,2,6,7,8))
test$Sex <-  as.factor(train$Sex)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
test$Sex <-  unfactor(train$Sex)
installed.packages("varhandle")
install.packages("varhandle")
library(varhandle)
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,6,7,8))
test <-  subset(test,select=c(1,2,6,7,8))
test$Sex <-  unfactor(train$Sex)
test <- unfactor(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
library(varhandle)
test <- read.csv("parsed/test_clean.csv", stringsAsFactors = TRUE)
train <- read.csv("parsed/train_clean.csv", stringsAsFactors = TRUE)
train <- subset(train,select=c(1,2,4,6,7,8))
test <-  subset(test,select=c(1,2,4,6,7,8))
test <- unfactor(test)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model,test="Chisq")
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=test,type='response')
data.lda.cv <- rda(Target ~ ., data, prior = seq(1,1,length.out=K)/K, CV=TRUE)
train
length(train)
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
for (k in neighboursRW)
{
myknn.cv <- knn.cv (train,test, k = neighbours[k])
errors[k, "k"] <- neighbours[k]
tab <- table(myknn.cv, test$class)
errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test, k = neighbours[k])
errors[k, "k"] <- neighbours[k]
tab <- table(myknn.cv, test$class)
errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test, k = neighbours[k])
errors[k, "k"] <- neighbours[k]
tab <- table(myknn.cv, test$class)
errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
library(cluster)library(class)
library(class)
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test, k = neighbours[k])
errors[k, "k"] <- neighbours[k]
tab <- table(myknn.cv, test$class)
errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
tab <- table(myknn.cv, test)
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test, k = neighbours[k])
errors[k, "k"] <- neighbours[k]
tab <- table(myknn.cv, test)
errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
length(train)
length(test)
myknn.cv <- knn.cv (train,test, k = neighbours[k])
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
cl = train_labels[,1]
cl = train[,1]
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test,cl, k = neighbours[k])
errors[k, "k"] <- neighbours[k]
tab <- table(myknn.cv, test)
errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test, k = neighbours[k])
#errors[k, "k"] <- neighbours[k]
#tab <- table(myknn.cv, test)
#errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test, k = 6)
#errors[k, "k"] <- neighbours[k]
#tab <- table(myknn.cv, test)
#errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
myknn.cv <- knn.cv (train,train, k = length(train))
neighbours <- c(1:6)
errors<- matrix (nrow=length(neighbours), ncol=2)
colnames(errors) <- c("k","LOOCV error")
for (k in neighbours)
{
myknn.cv <- knn.cv (train,train, k = length(train))
#errors[k, "k"] <- neighbours[k]
#tab <- table(myknn.cv, test)
#errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
errorsRW
myknn.cv <- knn.cv (train,test, k = length(test))
length(train)
length(test)
for (k in neighbours)
{
myknn.cv <- knn.cv (train,test, k = factor(train[,6]))
#errors[k, "k"] <- neighbours[k]
#tab <- table(myknn.cv, test)
#errors[k, "LOOCV error"] <- 1 - sum(tab[row(tab)==col(tab)])/sum(tab)
}
myknn.cv <- knn.cv (train,test, k = factor(train[,5]))
myknn.cv <- knn.cv (train,test, k = factor(train[,7]))
